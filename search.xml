<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[服务器安装FinalSpeed]]></title>
      <url>%2F2017%2F02%2F01%2FFinalSpeed%2F</url>
      <content type="text"><![CDATA[家里的假宽带看youtube1080p老是卡，只能把抛弃了好久的FinalSpeed又捡了回来。 一、安装rm -f install_fs.sh wget https://raw.githubusercontent.com/oliutiano/finalspeed/master/install_fs.sh chmod +x install_fs.sh ./install_fs.sh 2&gt;&amp;1 | tee install.log 二，查看日志tail -f /fs/server.log 服务端如果正常运行会有提示： FinalSpeed server start success 三、设置开机启动chmod +x /etc/rc.local vi /etc/rc.local 在文件最后一行加入语句：sh /fs/start.sh 保存，退出。四、效果加速效果还行，以家里的缩水100M宽带来讲，配置好电脑端以后，加速前3MbpS的连接速度，加速后，能达到27Mbps,可以看4K。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[windows使用aria2]]></title>
      <url>%2F2017%2F02%2F01%2Faria2%2F</url>
      <content type="text"><![CDATA[前几天找到方法取代了百度云客户端，最近看迅雷也不是很顺眼，就开始摸索着配置起了下载神器aria2，想把迅雷也卸载了。 按照网上的方法，下载aria2,下载webui,配置aria2.conf,配置HideRun.vbs，运行，然后信心满满的打开了webui,就是 进任务管理器看了一下，发现aria2c.exe根本没有运行，又改了好一会，终于在webui里看到了连接成功的提示 下载http时速度很不错，但没我idm快，并没有什么用；随手下载了一个bt,发现，没下载速度？？？，这时才发现aria2.conf才是最难配的，参考了一下别人的配置文件，改了好几版 然而并没有起多大作用，只好去官网看英文版的用户手册，大致弄清楚了一些常用参数的作用后，又重新改了一下配置文件，bt速度终于能看了，但最高也只有几百K每秒，同样的资源迅雷1M多每秒，从速度上来看，并不能取代迅雷。毫无疑问aria2是非常优秀的下载软件，但在windows上水土不服，出现上述情况的原因与我的配置文件也有很大关系，贴一下配置文件，留念，备忘，方便以后来修改。## 文件保存相关 ## # 文件的保存路径(可使用绝对路径或相对路径) dir=E:\Downloads\ # 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M #disk-cache=32M # 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc # 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc # falloc和trunc则需要文件系统和内核支持 # NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项 file-allocation=falloc # 断点续传 continue=true #日志 log=G:\aria2\aria2.log log-level=error ## 下载连接相关 ## # 最大同时下载任务数, 运行时可修改, 默认:5 max-concurrent-downloads=5 # 同一服务器连接数, 添加时可指定, 默认:1 max-connection-per-server=10 # 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M # 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载 min-split-size=10M # 单个任务最大线程数, 添加时可指定, 默认:5 split=5 # 整体下载速度限制, 运行时可修改, 默认:0 #max-overall-download-limit=0 # 单个任务下载速度限制, 默认:0 #max-download-limit=0 # 整体上传速度限制, 运行时可修改, 默认:0 max-overall-upload-limit=50 # 单个任务上传速度限制, 默认:0 max-upload-limit=20 # 禁用IPv6, 默认:false disable-ipv6=true ## 进度保存相关 ## # 从会话文件中读取下载任务 input-file=G:\aria2\aria2.session # 在Aria2退出时保存`错误/未完成`的下载任务到会话文件 save-session=G:\aria2\aria2.session # 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0 save-session-interval=60 ## RPC相关设置 ## # 启用RPC, 默认:false enable-rpc=true # 允许所有来源, 默认:false rpc-allow-origin-all=true # 允许非外部访问, 默认:false rpc-listen-all=true # 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同 #event-poll=select # RPC监听端口, 端口被占用时可以修改, 默认:6800 #rpc-listen-port=6800 # 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项 #rpc-secret=&lt;TOKEN&gt; # 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项 #rpc-user=&lt;USER&gt; # 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项 #rpc-passwd=&lt;PASSWD&gt; ## BT/PT下载相关 ## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999 #listen-port=51413 # 单个种子最大连接数, 默认:55 #bt-max-peers=55 # 打开DHT功能, PT需要禁用, 默认:true #enable-dht=false # 打开IPv6 DHT功能, PT需要禁用 enable-dht6=false # DHT网络监听端口, 默认:6881-6999 #dht-listen-port=6881-6999 # 本地节点查找, PT需要禁用, 默认:false #bt-enable-lpd=false # 种子交换, PT需要禁用, 默认:true enable-peer-exchange=false # 每个种子限速, 对少种的PT很有用, 默认:50K bt-request-peer-speed-limit=100K # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.77 # 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0 #seed-ratio=0 # 强制保存会话, 即使任务已经完成, 默认:false # 较新的版本开启后会在任务完成后依然保留.aria2文件 #force-save=false # BT校验相关, 默认:true #bt-hash-check-seed=true # 继续之前的BT任务时, 无需再次校验, 默认:false bt-seed-unverified=true # 保存磁力链接元数据为种子文件(.torrent文件), 默认:false bt-save-metadata=true ## 其它 ## #最低连接速度，当与服务器的连接速度小于这个值时，连接被关闭 lowest-speed-limit=10K #当发送一个请求，得到的回复是“文件未找到”后，重试的次数，0表示无限制 max-file-not-found=0 max-tries=0 #验证使用CA证书的小伙伴的证书(好像并没有人用CA证书），默认true #check-certificate=false #http缓存控制 http-no-cache=true #在bt下载时移除没有被选中的文件 bt-remove-unselected-file=true #rpc加密传输 rpc-secure=false #作为守护进程运行，在没有用户线程可服务时自动离开 daemon=true #显示在列表中的下载项的最大数目 max-download-result=120 现在我的感觉是，其实迅雷还是不错的。虽然界面丑，体验差，但至少限速不是那么明显。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[百度云大文件下载破解]]></title>
      <url>%2F2017%2F01%2F26%2Fbaiduyun%2F</url>
      <content type="text"><![CDATA[各种百度云破解版一年换了几个，还是老被限速，所以决定不用百度云客户端了，于是就找到了如下的解决方案。 不用客户端的话，只能下载单个的小文件，当尝试下载文件夹或大文件时，百度会很友好的弹窗提醒你，安装客户端才能下载。 然后就是著名的一行代码 Object.defineProperty(this , &#39;navigator&#39; , {value: { platform: &quot;&quot; }}); 按f12,在console里输入后，就可以下载大文件了（文件夹会被自动打包成一个.zip文件，下载后解压时有时会有警告或错误，但文件不受任何影响）。 后来有个大表哥把一行代码改成了六行（有效的美化了输入代码后的console界面） console.log(&quot;Don&#39;t be evil!&quot;); var actualCode = &quot;Object.defineProperty(navigator,&#39;platform&#39;,{get:function(){return &#39;这里随便吧&#39;;}});&quot;; var s = document.createElement(&#39;script&#39;); s.textContent = actualCode; document.documentElement.appendChild(s); s.remove(); 并顺手把这六行代码做成了一个Chrome插件 插件刚刚上传到Chrome应用商店，现在还搜索不到，只能通过直接链接去找到，不出意外的话，过几天应该就能通过应用商店搜索添加了。我用的是idm,这个资源的话，下载速度2-3M/S,迅雷应该会更快，这对限速云来说已经是一个非常可观的速度了。 此插件已经开源，github地址。如果需要10M/S甚至30M/S的下载速度的话，可以关注一下另一个大表哥的开源项目,github地址，这个软件现有版本已被和谐，新版本正在内部测试,稳定后会更新到github.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JC_SS使用说明]]></title>
      <url>%2F2017%2F01%2F22%2FJC_SS_guide%2F</url>
      <content type="text"><![CDATA[分享自己的ss服务器，有需要的小伙伴注册之前一定要先看一下使用说明： 一、注册，获取ss账号- 注册地址-注意：– 注册邮箱不能是qq邮箱，其它的邮箱都可以– 注册所需的邀请码在网站的邀请码页面获取，网站计划总用户数量为60人，网站邀请码页面一共会放出20个以jaken开头的邀请码，每个用户注册后可以邀请一人，已经有ss账号的最好把机会留给更需要的人。二、下载ssr客户端- 从GitHub链接里下载对应的客户端三、配置ssr客户端- win客户端配置如下图，圈红圈的四个地方都是你要根据自己的账户信息去填写的，端口，密码，加密方式在“用户中心”，服务器ip在“节点列表”。下面四个紫色的参数要与图片中的一致。点击确定后在状态栏找到小飞机图标，右键，系统代理模式，选择PAC模式，完成。 - android客户端配置，如果你已经配置好了win客户端，点击上图ssr链接的内容，可以生成一个二维码，用安卓端通过扫描二维码的方式添加即可，你也可以手动输入与win客户端一样的参数以完成配置。- mac客户端,iphone客户端自行配置，方法几乎一样。三、一些问题- 关于服务器，如果不出什么意外和问题的话，这个服务器会一直开放下去，供大家使用。- 关于网速，以前使用ss单用户版的时候，网速通过协议手段优化后可以达到20Mbps，这次的ssr多用户版我也是第一次使用，不是很了解，只做了一点优化，实测网速只能达到6Mbps左右，已经用了两天，虽然不是非常快但足够日常使用，后期随着用户数量增加不知道网速会不会下降。- 关于客户端，虽然服务器部署的是ssr,但设置成了兼容ss,你也可以通过ss客户端去使用服务，配置会简单很多，但网速等各方面会受到不同程度的影响，推荐使用ssr客户端。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[乐视云视频真实地址获取]]></title>
      <url>%2F2017%2F01%2F07%2Fletv_cloud%2F</url>
      <content type="text"><![CDATA[网上找到的乐视云视频真实地址获取方法，写出来备忘 这是我要下载视频的网站，从水印和详情中可以看到视频服务提供商是乐视云，但是视频基于flash,idm等下载器并不能下载。 f12审查元素，搜索uu=, 在代码中找到字段uu=xxxxxxxxxx&amp;vu=xxxxxxxxxx,图中的这个视频的值是uu=d8b5cc8a72&amp;vu=7ed2e97c61，把这个参数加到乐视云平台地址http://yuntv.letv.com/bcloud.html?后面，得到完整的视频地址为http://yuntv.letv.com/bcloud.html?uu=d8b5cc8a72&amp;vu=7ed2e97c61，如图： 然后就能愉快的下载视频了]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[改hosts文件实现科学上网]]></title>
      <url>%2F2016%2F12%2F07%2Ffuckwall%2F</url>
      <content type="text"><![CDATA[最近发现身边的一些人竟然不知道如何科学上网（如hywang)，让我情不自禁地怀疑起了人生，介绍一种最简单，最廉价的方法。 一、下载最新的hosts文件- GitHub下载链接二、用新的hosts文件替换电脑上的hosts文件-各平台 hosts 文件位置三、一些问题- GitHub是不需要fanqiang的，如果你上不去，可能是网速太慢或者人品出了问题。你可以试试国内同款的coding，方法是一样的，见第一、二点。- 由于某些不可描述的原因，hosts会有时效性，如果有一天你发现自己不能科学上网了，把第一、二点重复一下。- 如果你并不知道怎么把hosts文件下载下来，那你就把hosts文件里的代码粘贴复制覆盖你原来的hosts文件。- 是的，你不能在YouTube在线看视频。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[newifi mini使用闪讯方法]]></title>
      <url>%2F2016%2F09%2F24%2Fshanxun%2F</url>
      <content type="text"><![CDATA[一、下载所需文件- 下载newifi刷机工具，百度云链接 密码：jz7o- 下载我做好的路由器固件，百度云链接 密码：sk53二、路由器刷机- 解压路由器固件，用网线将路由器与电脑连接，双击运行刷机工具，选择“高级恢复”，选择解压后的路由器固件，按照提示将固件刷入路由器。三、路由器配置- 重启路由器，用网线将路由器与电脑连接，进入路由器的管理界面，登陆，在”接口”–”WAN”处填写自己闪讯的账号和密码，”保存并应用”，重启路由器。你会发现自己的电脑已经连接上网络。四、关于密码- 路由器固件的解压密码为”姓名拼音+qq号”，路由器管理员密码、wifi密码为qq号。不建议陌生人使用。- 闪讯密码最好为固定密码。- 临时密码的话，只要路由器不断电，可以一直使用而不会过期。- 路由器断电后，如果开启路由器时临时密码已过期，需要将获取的密码填入路由器中（具体见步骤三）。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Git(一)]]></title>
      <url>%2F2016%2F08%2F01%2Fgit%2F</url>
      <content type="text"><![CDATA[一、建立本地库1.配置本地库的用户名和email。git config --global user.name &quot;Your Name&quot; git config --global user.email &quot;email@example.com&quot; 2.创建本地库。mkdir pre3 cd pre3 创建名为“pre3”的空目录作为本地库 pwd 查看本地库的位置 git init 初始化本地库 / 把创建的这个本地库交给git管理 3.添加文件到本地库。git add pre3.md 这个文件要已经位于本地库的目录里（根目录和子目录无所谓） 4.提交文件到本地库。git commit -m &quot;wrote a pre3&quot; -m “xxx” 的引号里填写的是对本次提交的文件的描述，可为任意内容 二、建立远程库1.创建coding/github账号。2.创建SSH Key。ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 一路回车，可以不设密码，成功后可以在本地库的同级目录里找到.ssh文件夹，里面有id_rsa和id_rsa.pub两个文件，id_rsa是私钥，id_rsa.pub是公钥。 3.把SSH Key的公匙添加到github。4.创建远程库。5.关联本地库和远程库。git remote add pre3 git@github.com:xxx/pre3.git “git remote add pre3”中的”per3”是你对这个远程库的命名，可为任意值;”git@github.com:xxx/pre3.git”为你的远程库的地址 三、把本地库的所有内容推送到远程库上git push -u pre3 master 使用-u选项指定默认主机，这样以后就可以不加任何参数使用git push 四、对远程库的基本操作1.查看远程库名称。git remote 2.查看已经连接上的远程库。git remote -v 3.添加远程库。git remote add 你对远程库的命名 远程库地址 远程库地址不一定是https 4.移除远程库。git remote remove 远程库名 - 第一次使用Git 的 clone 或者 push 命令连接GitHub 时，会收到 一个SSH警告，输入 yes 回车即可。 -每次开启git bash后，都要手动进入自己的仓库。(cd 命令)。]]></content>
    </entry>

    
  
  
</search>
